@using OMS.UI.Areas.Settings.ViewModels
@model List<ProjectStatusVM>


<div class="modal fade" id="mdlProjectStatusShow" style="">
	<div class="modal-dialog" id="PlaceHolderHere">
	</div>
</div>

<div class="card">
	<div class="card-header">
		<div class="row align-items-center">
			<div class="row align-items-center">
				<div class="col-lg-6">
					<h4 class="card-title">Project Status Index</h4>
				</div>
				<div class="col-lg-6 text-end">
					<button type="button" class="btn btn-de-primary" data-toggle="ajax-modal"
							data-target="#mdlProjectStatusShow" data-url="@Url.Action($"CreateProjectStatus")">
						<i class="fas fa-plus me-2"></i>Add Project Status
					</button>
				</div>
			</div>
			<!--end col-->

		</div>  <!--end row-->
	</div><!--end card-header-->
	<div class="card-body">
		<div class="table-responsive">
			<table class="table mb-0">
				<thead class="thead-light">
					<tr>
						@* <th class="d-none">@Html.DisplayNameFor(m => m.)</th> *@
						<th>#</th>
						<th>Name</th>
						<th>Default Status</th>
						<th>Action</th>
					</tr><!--end tr-->
				</thead>

				<tbody>
					@for (var i = 0; i < Model.Count(); i++)
					{
						<tr>
							<td class="d-none">@Html.DisplayNameFor(m => Model[i].Id)</td>
							<td>@(i + 1)</td>
							<td><span><i class="bi bi-dot bg-info ps-2 pe-2  rounded-circle me-2"></i></span>@Model[i].Name</td>
							<td>
								<div class="form-check default_status" data-status-id="@Model[i].Id">
									<input class="form-check-input" type="radio" name="IsDefaultStatus" id="projRadios1" value="@Model[i].IsDefaultStatus" @(Model[i].IsDefaultStatus ? "checked" : "")>
									<label class="form-check-label" for="projRadios1">
									</label>
								</div>
							</td>
							<td>
								<button type="button" class="custombuttonaslink" data-toggle="ajax-modal"
										data-bs-target="#mdlProjectStatusShow" data-url="@Url.Action($"EditProjectStatus/{@Model[i].Id}")">
									<i class="las la-pen text-secondary font-16"></i>
								</button>
								@if(!Model[i].IsDefaultStatus){
								<a id="deletePS" name="Id" href="#" class="ms-2"
									   data-target="" data-url="@Url.Action($"DeleteProjectStatus/{@Model[i].Id}")">
									<i class="las la-trash-alt text-secondary font-16"></i>
								</a>
								}
							</td>
						</tr><!--end tr-->
					}
				</tbody>
			</table>
		</div>
	</div><!--end card-body-->
</div><!--end card-->

<script type="text/javascript">
		$('body').on('click', '.default_status', function () {
			const swalWithBootstrapButtons = Swal.mixin({
			  customClass: {
				 confirmButton: "btn btn-de-primary",
				 cancelButton: "btn btn-de-danger me-2"
			  },
			  buttonsStyling: false
		   });
		var statusID = $(this).data('status-id');
		$("#divBlocker").removeClass("d-none").addClass("screenblocker");
		var currentUrl = window.location.href;
		currentUrl = currentUrl.substring(0, currentUrl.lastIndexOf("/") + 1);
		var url = currentUrl + "DefaultStatusUpdate";
			  var sendData = "Id=" + statusID + "";

		  $.post(url, sendData).done(function (data, status) {
				 $("#divBlocker").addClass("d-none").removeClass("screenblocker");
				 if (status == "success") {
							 swalWithBootstrapButtons.fire({ title: "Updated!",
		 text: "Updated successfully!",
		 icon: "success",
			  allowOutsideClick: false}).then(okay => {
		   if (okay) {
			location.reload();
		  }
		});

				 }
				 else{
					@*  swalWithBootstrapButtons.fire({
				 title: "Error Occured",
				 text: "Error Occured while Data deletion",
				 icon: "error",
					allowOutsideClick: false
				 }); *@
				 }
			  })
	});

	$(document).on("click", "#deletePS", function (e) {
		   e.preventDefault();

		   const swalWithBootstrapButtons = Swal.mixin({
			  customClass: {
				 confirmButton: "btn btn-de-primary",
				 cancelButton: "btn btn-de-danger me-2"
			  },
			  buttonsStyling: false
		   });
		   swalWithBootstrapButtons.fire({
			  title: "Are you sure?",
			  text: "Do You want to delete this?",
			  icon: "warning",
			  showCancelButton: true,
			  confirmButtonText: '<i class="mdi mdi-check-all me-2"></i>Delete',
			  cancelButtonText: '<i class="mdi mdi-window-close me-2"></i>Close',
			  // confirmButtonText: "Yes, delete it!",
			  // cancelButtonText: "No, cancel!",
			  reverseButtons: true,
			  allowOutsideClick: false
		   }).then((result) => {
			  if (result.isConfirmed) {
				 delProjectStatus(this);
			  } else if (
				 result.dismiss === Swal.DismissReason.cancel
			  ) {
				 // swalWithBootstrapButtons.fire({
				 // title: "Cancelled",
				 // text: "Your imaginary file is safe :)",
				 // icon: "error",
				 // 	allowOutsideClick: false
				 // });
			  }
		   });

		   function delProjectStatus(param) {
			  var url = $(param).data('url');
			  url = decodeURIComponent(url);
			  var sendData = "Id=" + url.split('/').filter(Boolean).pop() + "";
			  url = url.substring(0, url.lastIndexOf("/"));
			  var currentUrl = window.location.origin;
			  url = currentUrl + url;
			  $.post(url, sendData).done(function (data, status) {
				 $("#divBlocker").addClass("d-none").removeClass("screenblocker");
				 if (status == "success") {
							 swalWithBootstrapButtons.fire({ title: "Deleted!",
		 text: "Deleted successfully!",
		 icon: "success",
			  allowOutsideClick: false}).then(okay => {
		   if (okay) {
			location.reload();
		  }
		});

				 }
				 else{
					 swalWithBootstrapButtons.fire({
				 title: "Error Occured",
				 text: "Error Occured while Data deletion",
				 icon: "error",
					allowOutsideClick: false
				 });
				 }
			  })
		   }
		});
</script>